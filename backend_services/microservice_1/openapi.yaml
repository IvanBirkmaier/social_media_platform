openapi: 3.0.0
info:
  title: Sample API
  version: 1.0.0
servers:
  - url: http://localhost:8000
    description: Development server

paths:
  /account/:
    post:
      summary: Create a new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreate'
      responses:
        '201':
          description: Account created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
        '400':
          description: Username already registered

  /account-id/{username}:
    get:
      summary: Get account ID by username
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  account_id:
                    type: integer

  /check-username/{username}:
    get:
      summary: Check if username exists
      parameters:
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Username existence
          content:
            application/json:
              schema:
                type: object
                properties:
                  username_exists:
                    type: boolean

  /check-email/{email}:
    get:
      summary: Check if email exists
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
            format: email
      responses:
        '200':
          description: Email existence
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_exists:
                    type: boolean

  /login/:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
        '400':
          description: Wrong username or password

  /account/{account_id}/:
    delete:
      summary: Delete account
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Account successfully deleted
        '404':
          description: Account not found

components:
  schemas:
    AccountCreate:
      type: object
      required:
        - email
        - password
        - username
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        username:
          type: string

    AccountResponse:
      type: object
      required:
        - id
        - username
        - email
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
          format: email

    UserLogin:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

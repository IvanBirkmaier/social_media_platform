openapi: 3.0.0
info:
  title: Sample API
  version: 1.0.0
paths:
  /posts/:
    post:
      summary: Create a new post
      operationId: createPost
      tags:
        - post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreate'
      responses:
        '201':
          description: Post created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  post_id:
                    type: integer
                    format: int64
  /posts/home/{account_id}:
    get:
      summary: Retrieve posts by user
      operationId: getPostsByUser
      tags:
        - post
      parameters:
        - name: account_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: List of posts
          content:
            application/json:
              schema:
                type: object
                properties:
                  posts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Post'
  /posts/{post_id}/image/:
    get:
      summary: Retrieve full image of a post
      operationId: getPostImage
      tags:
        - post
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Full image of the post
          content:
            application/json:
              schema:
                type: object
                properties:
                  full_image:
                    type: string
        '404':
          description: Post not found
  /posts/random/:
    get:
      summary: Retrieve random posts
      operationId: getRandomPosts
      tags:
        - post
      parameters:
        - name: account_id
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: List of random posts
          content:
            application/json:
              schema:
                type: object
                properties:
                  posts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Post'
  /posts/{post_id}/:
    delete:
      summary: Delete a post
      operationId: deletePost
      tags:
        - post
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Post deleted successfully
        '404':
          description: Post not found
components:
  schemas:
    PostCreate:
      type: object
      properties:
        account_id:
          type: integer
          format: int64
        description:
          type: string
        base64_image:
          type: string
    Post:
      type: object
      properties:
        id:
          type: integer
          format: int64
        account_id:
          type: integer
          format: int64
        description:
          type: string
        image_url:
          type: string

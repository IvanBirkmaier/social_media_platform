1. Um die Rquirement.txt automatisch aus der conda enviroment erstellen zu lassen, benötigt man folgenden Befehl: conda list -e > requirements.txt

2. Datenbank im Container checken commands:
    2.1: docker ps
    2.2: docker exec -it [Container-ID oder Name] bash
    2.3: psql -U user -d meine_db
    2.4: \d see every tables
    2.5: SELECT * FROM accounts;
    or select id, account_id, description, created_at from posts;

3. Um Datenbank zu starten:
    3.1:  docker run -d --name db_social_media -p 5432:5432 database

4. Um API zu starten:
    4.1: docker run -p 8000:8000 mein_api_image

5. Start API local ohne Container:  uvicorn app:app --host 127.0.0.1 --port 8000 --reload

6. Frontend starten: ins frontend navigieren: beim ersten mal: npm i, ansonsten npm run dev
    tailwind and shadcn for css

7. Docker Befehle:
    6.1 docker stop $(docker ps -aq) stopt alle container
    6.2 docker rm $(docker ps -aq) Löscht alle laufenden und nicht laufenden Container
    6.3 docker rmi $(docker images -q) löscht alle images
        6.3.1 docker rmi [Image-ID] einzelnes image löschen
    6.4 docker start [Container-ID] Gestoppten Container wieder starten
    6.5 docker ps anzeigen aller laufenden Container
        6.5.1 docker ps -a anzeigen aller container (egal ob laufend oder gestoppt)
    6.6 docker compose up -d um die docker compose zu starten
    6.7 docker-compose down -v um volume zu löscht 

Anlegen benutzer:
$Url = "http://localhost:8000/users/"
 $Body = @{
     username = "Ihrnutzeredname"
     email = "IhreEmaileee1@example.com"
     password = "pas"
 } | ConvertTo-Json
 
 Invoke-RestMethod -Uri $Url -Method Post -Body $Body -ContentType "application/json"

Login:
$Url = "http://localhost:8000/login"  # Ändern Sie die URL entsprechend Ihrer API-Konfiguration
$Body = @{
    username = "IhrBenutzername"
    password = "IhrPasswort"
} | ConvertTo-Json

# Führen Sie die POST-Anfrage aus
Invoke-RestMethod -Uri $Url -Method Post -Body $Body -ContentType "application/json"


Post erstellen Bilder müssen in Base64 decodiert werden:
$Url = "http://localhost:8000/posts/"  # Ändern Sie die URL entsprechend Ihrer API-Konfiguration
$Body = @{
    user_id = 4  # Ersetzen Sie mit der tatsächlichen User-ID
    description = "Bildbeschreibung pimmel"  # Ersetzen Sie mit Ihrer Bildbeschreibung
    base64_image = ""
} | ConvertTo-Json

# Führen Sie die POST-Anfrage aus
Invoke-RestMethod -Uri $Url -Method Post -Body $Body -ContentType "application/json"

Comment erstellen Bilder müssen in Base64 decodiert werden:
$Url = "http://localhost:8000/comments/"  # Ändern Sie die URL entsprechend Ihrer API-Konfiguration
$Body = @{
    user_id = 4  # Ersetzen Sie mit der tatsächlichen User-ID
    post_id = 1  # Ersetzen Sie mit der tatsächlichen PostId
    text = "Cooles Bild"
} | ConvertTo-Json

# Führen Sie die POST-Anfrage aus
Invoke-RestMethod -Uri $Url -Method Post -Body $Body -ContentType "application/json"


Auslesen der Post für einen User:
$Url = "http://localhost:8000/users/4/posts/"  # Ersetzen Sie 1 durch die tatsächliche Post-ID
$Response = Invoke-RestMethod -Uri $Url -Method Get
$Response | ConvertTo-Json

Auslesen der Userid nach username:
$Url = "http://localhost:8000/users/username/name/"  # Ersetzen Sie 1 durch die tatsächliche Post-ID
$Response = Invoke-RestMethod -Uri $Url -Method Get
$Response | ConvertTo-Json


Auslesen der Comments für einen Post:
$Url = "http://localhost:8000/posts/1/comments/"  # Ersetzen Sie 1 durch die tatsächliche Post-ID
$Response = Invoke-RestMethod -Uri $Url -Method Get
$Response | ConvertTo-Json

Auslesen von 10 random Posts:
$Url = "http://localhost:8000/posts/random?user_id=1"  # Ersetzen Sie 123 mit der tatsächlichen User-ID
$Response = Invoke-RestMethod -Uri $Url -Method Get
$Response | ConvertTo-Json

version: '3.8'

services:
  db:
    build: 
      context: ./database
    environment:
      POSTGRES_DB: meine_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  microservice_one:
    build: 
      context: ./backend_services/microservice_1
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/meine_db
      FRONTEND_URL: http://localhost:3000
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC_ONE: post_queue
      KAFKA_TOPIC_TWO: comment_queue
    ports:
      - "8000:8000"
    depends_on:
      - db

  microservice_two:
    build:
      context: ./backend_services/microservice_2
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/meine_db
    ports:
      - "8001:8001"
    depends_on:
      - db
      - microservice_one
      - kafka

  microservice_three:
    build:
      context: ./backend_services/microservice_3
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/meine_db
      KAFKA_TOPIC: classified_comments_queue
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8002:8002"
    depends_on:
      - db
      - microservice_one
      - kafka

  frontend:
    build:
      context: ./frontend
      args:
        VITE_BACKEND_URL: http://microservice_one:8000
    ports:
      - "3000:80"
    depends_on:
      - microservice_one

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - '9092:9092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  
  consumer_one:
    build:
      context: ./kafka/consumers/consumer_1
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC: post_queue
      MICROSERVICE_2_API_URL: http://microservice_two:8001/optimize/
    depends_on:
      - kafka
      - microservice_two

  consumer_two:
    build:
      context: ./kafka/consumers/consumer_2
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC: comment_queue
      MICROSERVICE_3_API_URL: http://microservice_three:8002/classify/
    depends_on:
      - kafka
      - microservice_three
  
  kafka-init:
    build: ./kafka/init
    environment:
      KAFKA_BROKER_ADDRESS: kafka:9092
      KAFKA_TOPIC_ONE: post_queue
      KAFKA_TOPIC_TWO: comment_queue
      KAFKA_TOPIC_THREE: classified_comments_queue

    depends_on:
      - kafka
      - zookeeper

volumes:
  postgres_data:

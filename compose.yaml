version: '3.8'

services:
###############################################
# Datenbank Setup
###############################################
  db:
    build: 
      context: ./database
    environment:
      POSTGRES_DB: meine_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  db_init:
    build: 
      context: ./database/init
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/meine_db
    depends_on:
      - db
  
###############################################
# Microservices
###############################################
  
  # Authentfication Service
  microservice_one:
    build: 
      context: ./backend_services/microservice_1
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/meine_db
      FRONTEND_URL: http://localhost:3000
    ports:
      - "8001:8001"
    depends_on:
      - db
      - db_init

  # Post Service
  microservice_two:
    build:
      context: ./backend_services/microservice_2
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/meine_db
      FRONTEND_URL: http://localhost:3000
      KAFKA_TOPIC: post_queue
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8002:8002"
    depends_on:
      - db
      - db_init
      - kafka


  # Comment Service
  microservice_three:
    build:
      context: ./backend_services/microservice_3
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/meine_db
      FRONTEND_URL: http://localhost:3000
      KAFKA_TOPIC: comment_queue
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8003:8003"
    depends_on:
      - db
      - db_init
      - kafka

  # Profil Service
  microservice_four:
    build:
      context: ./backend_services/microservice_4
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/meine_db
      FRONTEND_URL: http://localhost:3000
    ports:
      - "8004:8004"
    depends_on:
      - db
      - db_init

  # Images optimizer
  microservice_five:
    build:
      context: ./backend_services/microservice_5
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/meine_db
    ports:
      - "8005:8005"
    depends_on:
      - db
      - db_init
      - microservice_one
      - kafka

  microservice_six:
    build:
      context: ./backend_services/microservice_6
    environment:
      DATABASE_URL: postgresql://user:password@db:5432/meine_db
      KAFKA_TOPIC: classified_comments_queue
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8007:8007"
    depends_on:
      - db
      - db_init
      - microservice_one
      - microservice_two
      - kafka

###############################################
# Frontend
###############################################
  frontend:
    build:
      context: ./frontend
    environment:
      VITE_URL_MICROSERVICE_ONE: http://microservice_one:8001
      VITE_URL_MICROSERVICE_TWO: http://microservice_two:8002
      VITE_URL_MICROSERVICE_THREE: http://microservice_three:8003
      VITE_URL_MICROSERVICE_FOUR: http://microservice_four:8004
      VITE_WEBSOCKET_SERVER_URL: ws://websocket_server:8765
    ports:
      - "3000:80"
    depends_on:
      - microservice_one
      - microservice_two
      - microservice_three
      - microservice_four

###############################################
# Kafka Server
###############################################
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - '9092:9092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  
  kafka-init:
    build: ./kafka/init
    environment:
      KAFKA_BROKER_ADDRESS: kafka:9092
      KAFKA_TOPIC_ONE: post_queue
      KAFKA_TOPIC_TWO: comment_queue
      KAFKA_TOPIC_THREE: classified_comments_queue
    depends_on:
      - kafka
      - zookeeper
 

###############################################
# Kafka Consumer
###############################################
  consumer_one:
    build:
      context: ./kafka/consumers/consumer_1
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC: post_queue
      MICROSERVICE_5_API_URL: http://microservice_five:8005/optimize/
    depends_on:
      - kafka
      - microservice_five
      - kafka-init

  consumer_two:
    build:
      context: ./kafka/consumers/consumer_2
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC: comment_queue
      MICROSERVICE_3_API_URL: http://microservice_six:8006/classify/
    depends_on:
      - kafka
      - microservice_six
      - kafka-init
  
  consumer_three:
    build:
      context: ./kafka/consumers/consumer_3
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_TOPIC: classified_comments_queue
      WEBSOCKET_CLIENT_URL: http://websocket_client_1:8021/trigger_update
    depends_on:
      - kafka
      - websocket_client_1
      - kafka-init
       
###############################################
# Websocket Server
###############################################
  websocket_server:
    build:
      context: ./websocket/server
    environment:
      WEBSOCKET_SERVER_HOST: 0.0.0.0
      WEBSOCKET_SERVER_PORT: 8765
    ports:
      - "8765:8765"

###############################################
# Websocket Clients
###############################################
  websocket_client_1:
    build:
      context: ./websocket/clients/client_1
    environment:
      WEBSOCKET_SERVER_HOST: websocket_server
      WEBSOCKET_PORT: 8765
    ports:
      - "8021:8021"
    depends_on:
      - websocket_server

volumes:
  postgres_data:
